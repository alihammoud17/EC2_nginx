# ansible/templates/security_audit.sh.j2
#!/bin/bash
# Security Audit Script for {{ app_name }}
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

set -euo pipefail

# Configuration
AUDIT_LOG="{{ audit_log_file | default('/var/log/security_audit.log') }}"
APP_NAME="{{ app_name }}"
DATE=$(date '+%Y-%m-%d %H:%M:%S')

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Logging function
log_audit() {
    echo -e "[$DATE] $1" | tee -a "$AUDIT_LOG"
}

# Header
log_audit "${GREEN}========================================"
log_audit "Security Audit Report for $APP_NAME"
log_audit "Hostname: $(hostname)"
log_audit "Date: $DATE"
log_audit "========================================${NC}"

# System Updates Check
log_audit "${YELLOW}Checking for available updates...${NC}"
if command -v apt >/dev/null 2>&1; then
    apt list --upgradable 2>/dev/null | grep -v "WARNING" | wc -l | xargs -I {} log_audit "Available updates: {}"
fi

# Failed Login Attempts
log_audit "${YELLOW}Checking failed login attempts (last 24 hours)...${NC}"
grep "Failed password" /var/log/auth.log | grep "$(date '+%b %d')" | wc -l | xargs -I {} log_audit "Failed login attempts today: {}"

# Listening Services
log_audit "${YELLOW}Checking listening services...${NC}"
log_audit "Open ports:"
netstat -tuln | grep LISTEN | while read line; do
    log_audit "  $line"
done

# User Accounts
log_audit "${YELLOW}Checking user accounts...${NC}"
log_audit "User accounts with login shells:"
grep -E "(/bin/bash|/bin/sh|/bin/zsh)" /etc/passwd | while read line; do
    log_audit "  $line"
done

# File Permissions Check
log_audit "${YELLOW}Checking critical file permissions...${NC}"
CRITICAL_FILES=(
    "/etc/passwd:644"
    "/etc/shadow:640"
    "/etc/group:644"
    "/etc/ssh/sshd_config:600"
    "/etc/sudoers:440"
)

for file_perm in "${CRITICAL_FILES[@]}"; do
    file="${file_perm%:*}"
    expected="${file_perm#*:}"
    if [[ -f "$file" ]]; then
        actual=$(stat -c "%a" "$file")
        if [[ "$actual" == "$expected" ]]; then
            log_audit "${GREEN}✓ $file: $actual (correct)${NC}"
        else
            log_audit "${RED}✗ $file: $actual (expected: $expected)${NC}"
        fi
    else
        log_audit "${YELLOW}? $file: not found${NC}"
    fi
done

# Process Check
log_audit "${YELLOW}Checking running processes...${NC}"
ps aux --sort=-%cpu | head -10 | while read line; do
    log_audit "  $line"
done

# Disk Usage
log_audit "${YELLOW}Checking disk usage...${NC}"
df -h | grep -vE '^Filesystem|tmpfs|cdrom' | while read line; do
    log_audit "  $line"
done

# Network Connections
log_audit "${YELLOW}Checking active network connections...${NC}"
netstat -tuln | grep -E ':22|:80|:443|:3000' | while read line; do
    log_audit "  $line"
done

# Firewall Status
log_audit "${YELLOW}Checking firewall status...${NC}"
if command -v ufw >/dev/null 2>&1; then
    ufw status | while read line; do
        log_audit "  $line"
    done
fi

# Log File Sizes
log_audit "${YELLOW}Checking log file sizes...${NC}"
find /var/log -name "*.log" -type f -exec ls -lh {} \; 2>/dev/null | sort -k5 -hr | head -10 | while read line; do
    log_audit "  $line"
done

# System Load
log_audit "${YELLOW}System performance metrics...${NC}"
log_audit "Load average: $(uptime | awk -F'load average:' '{print $2}')"
log_audit "Memory usage: $(free -m | awk 'NR==2{printf "%.1f%%", $3*100/$2}')"
log_audit "Disk usage: $(df / | awk 'NR==2{print $5}')"

# Footer
log_audit "${GREEN}========================================"
log_audit "Security Audit Completed"
log_audit "========================================${NC}"