# nginx-playbook.yml
---
- name: Install and configure Nginx
  hosts: webservers
  become: yes
  vars:
    nginx_port: 80
    domain_name: "{{ ansible_default_ipv4.address }}"

  tasks:
    - name: Update system packages
      yum:
        name: "*"
        state: latest
        update_cache: yes

    - name: Install EPEL repository
      yum:
        name: epel-release
        state: present

    - name: Install Nginx
      yum:
        name: nginx
        state: present

    - name: Create nginx user
      user:
        name: nginx
        system: yes
        shell: /sbin/nologin
        home: /var/cache/nginx
        create_home: no

    - name: Create custom index.html
      copy:
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Welcome to Nginx</title>
              <style>
                  body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background-color: #f4f4f4; }
                  .container { max-width: 600px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
                  h1 { color: #333; }
                  .info { background: #e8f4fd; padding: 15px; border-radius: 5px; margin: 20px 0; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üöÄ Welcome to Nginx!</h1>
                  <p>Your web server is successfully configured and running.</p>
                  <div class="info">
                      <p><strong>Server IP:</strong> {{ ansible_default_ipv4.address }}</p>
                      <p><strong>Hostname:</strong> {{ ansible_hostname }}</p>
                      <p><strong>OS:</strong> {{ ansible_distribution }} {{ ansible_distribution_version }}</p>
                  </div>
                  <p>Deployed with Terraform and configured with Ansible! ‚ú®</p>
              </div>
          </body>
          </html>
        dest: /usr/share/nginx/html/index.html
        owner: nginx
        group: nginx
        mode: '0644'

    - name: Configure Nginx main config
      copy:
        content: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;

          include /usr/share/nginx/modules/*.conf;

          events {
              worker_connections 1024;
          }

          http {
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

              access_log  /var/log/nginx/access.log  main;

              sendfile            on;
              tcp_nopush          on;
              tcp_nodelay         on;
              keepalive_timeout   65;
              types_hash_max_size 2048;

              include             /etc/nginx/mime.types;
              default_type        application/octet-stream;

              include /etc/nginx/conf.d/*.conf;

              server {
                  listen       80 default_server;
                  listen       [::]:80 default_server;
                  server_name  {{ domain_name }};
                  root         /usr/share/nginx/html;

                  location / {
                      index  index.html index.htm;
                  }

                  location /health {
                      access_log off;
                      return 200 "healthy\n";
                      add_header Content-Type text/plain;
                  }

                  error_page   404              /404.html;
                  location = /40x.html {
                  }

                  error_page   500 502 503 504  /50x.html;
                  location = /50x.html {
                  }
              }
          }
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart nginx

    - name: Create nginx directories
      file:
        path: "{{ item }}"
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'
      loop:
        - /var/cache/nginx
        - /var/log/nginx

    - name: Set SELinux context for nginx (if SELinux is enabled)
      command: setsebool -P httpd_can_network_connect 1
      ignore_errors: yes

    - name: Start and enable Nginx service
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Open firewall for HTTP traffic
      firewalld:
        service: http
        permanent: yes
        state: enabled
        immediate: yes
      ignore_errors: yes

    - name: Check if Nginx is running
      uri:
        url: "http://{{ ansible_default_ipv4.address }}"
        method: GET
        status_code: 200
      register: nginx_check
      retries: 5
      delay: 10

    - name: Display success message
      debug:
        msg: |
          ‚úÖ Nginx has been successfully installed and configured!
          üåê You can access your web server at: http://{{ ansible_default_ipv4.address }}
          üìä Health check endpoint: http://{{ ansible_default_ipv4.address }}/health

  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted